package com.singleton;

public class TestLogger {

	public static void main(String[] args) {
		/*
		 * we know that if we have a class we can create multiple object of a class like*/
		SamlpeClass samlpeClass=new SamlpeClass();//without an constructor we can not create an object of a class.
		SamlpeClass samlpeClass1=new SamlpeClass();
		System.out.println(samlpeClass);
		System.out.println(samlpeClass1);
		/*But singleton pattern says we should be able to create only one object of a class.
		 * we know that whenever an object is created by default the constructor is executed.
		 * whenever we create an object constructor method is executed and create an object of logger. 
		 * The constructor Logger() is not visible if we declare default constructor private
		i.e. we can not create an object with new keyword like new Logger();*/
		System.out.println("Object with singleton pattern");
		Logger logger=Logger.getInstance();
		Logger logger1=Logger.getInstance();
		System.out.println(logger);
		System.out.println(logger1);
	}

}